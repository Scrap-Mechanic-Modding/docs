"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[797],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=s(n),u=o,d=h["".concat(l,".").concat(u)]||h[u]||k[u]||a;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[h]="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>k,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={title:"Handshaking"},i="Handshaking",c={unversionedId:"networking/protocol/handshake",id:"networking/protocol/handshake",title:"Handshaking",description:"Handshaking is the process of establishing a connection between two peers. It is a critical part of the protocol, as it is the only way to verify that the peer you are connected to is the peer you intended to connect to. It is also the only way to verify that the peer you are connected to is running the correct version of the protocol.",source:"@site/docs/networking/protocol/handshake.mdx",sourceDirName:"networking/protocol",slug:"/networking/protocol/handshake",permalink:"/docs/networking/protocol/handshake",draft:!1,editUrl:"https://pr.new/github.com/Scrap-Mechanic-Modding/Scrap-Mechanic-Modding.github.io/blob/main/docs/networking/protocol/handshake.mdx",tags:[],version:"current",frontMatter:{title:"Handshaking"},sidebar:"networkingSidebar",previous:{title:"Format",permalink:"/docs/networking/protocol/format"}},l={},s=[{value:"Packets",id:"packets",level:2},{value:"Handshaking Sequence",id:"handshaking-sequence",level:2}],p={toc:s},h="wrapper";function k(e){let{components:t,...n}=e;return(0,o.kt)(h,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"handshaking"},"Handshaking"),(0,o.kt)("p",null,"Handshaking is the process of establishing a connection between two peers. It is a critical part of the protocol, as it is the only way to verify that the peer you are connected to is the peer you intended to connect to. It is also the only way to verify that the peer you are connected to is running the correct version of the protocol."),(0,o.kt)("h2",{id:"packets"},"Packets"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Packet ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/docs/networking/packets/character"},"Character (0x09)"))," is unconfirmed to be part of the handshaking sequence. But it is currently assumed to be so.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/hello"},"HELLO (0x01)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/unknown"},"Unknown (0x02)")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/character"},"Character (0x09)"))),(0,o.kt)("h2",{id:"handshaking-sequence"},"Handshaking Sequence"),(0,o.kt)("mermaid",{value:"sequenceDiagram\n    Client->>Server: HELLO\n    Server--\x3e>Client: HELLO\n    Client->>Server: 2\n    Server--\x3e>Client: 2\n    Client->>Server: Character\n    Server--\x3e>Client: Character"}),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Client to Server: ",(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/hello"},"HELLO")),(0,o.kt)("li",{parentName:"ol"},"Server to Client: ",(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/hello"},"HELLO")),(0,o.kt)("li",{parentName:"ol"},"Client to Server: ",(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/unknown"},"2")),(0,o.kt)("li",{parentName:"ol"},"Server to Client: ",(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/unknown"},"2")),(0,o.kt)("li",{parentName:"ol"},"Client to Server: ",(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/character"},"Character")),(0,o.kt)("li",{parentName:"ol"},"Server to Client: ",(0,o.kt)("a",{parentName:"li",href:"/docs/networking/packets/character"},"Character"))))}k.isMDXComponent=!0}}]);