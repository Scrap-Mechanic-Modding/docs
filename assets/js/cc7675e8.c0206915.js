"use strict";(self.webpackChunksm_docs=self.webpackChunksm_docs||[]).push([[6],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(a),k=l,h=u["".concat(d,".").concat(k)]||u[k]||s[k]||r;return a?n.createElement(h,i(i({ref:t},m),{},{components:a})):n.createElement(h,i({ref:t},m))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=k;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[u]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},5098:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>s,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const r={title:"34 - Place"},i="Place",o={unversionedId:"networking/packets/place",id:"networking/packets/place",title:"34 - Place",description:"This packet is sent when the player places a shape.",source:"@site/docs/networking/packets/34-place.mdx",sourceDirName:"networking/packets",slug:"/networking/packets/place",permalink:"/docs/networking/packets/place",draft:!1,editUrl:"https://pr.new/github.com/Scrap-Mods/docs/blob/main/docs/networking/packets/34-place.mdx",tags:[],version:"current",sidebarPosition:34,frontMatter:{title:"34 - Place"},sidebar:"networkingSidebar",previous:{title:"33 - Drop Item Stack",permalink:"/docs/networking/packets/drop-item-stack"},next:{title:"35 - Remove",permalink:"/docs/networking/packets/remove"}},d={},p=[{value:"Structure",id:"structure",level:2},{value:"Vec3i",id:"vec3i",level:3},{value:"PlacedOn Enum",id:"placedon-enum",level:3},{value:"PlacedOn 2 - Terrain Surface",id:"placedon-2---terrain-surface",level:4},{value:"PlacedOn 3 - Terrain Asset",id:"placedon-3---terrain-asset",level:4},{value:"PlacedOn 4 - Body",id:"placedon-4---body",level:4},{value:"PlacedOn 6 - Lift",id:"placedon-6---lift",level:4},{value:"PlacedOn 8 - Joint",id:"placedon-8---joint",level:4},{value:"Validation",id:"validation",level:2},{value:"Hotbar index",id:"hotbar-index",level:3},{value:"Limited inventory mode",id:"limited-inventory-mode",level:4},{value:"Unlimited inventory mode",id:"unlimited-inventory-mode",level:4},{value:"Total item quantity",id:"total-item-quantity",level:3},{value:"Position",id:"position",level:3},{value:"Size",id:"size",level:3},{value:"Limited inventory mode",id:"limited-inventory-mode-1",level:4},{value:"Rotation",id:"rotation",level:3},{value:"Uuids",id:"uuids",level:3},{value:"Limited inventory mode",id:"limited-inventory-mode-2",level:4},{value:"Unlimited inventory mode",id:"unlimited-inventory-mode-1",level:4},{value:"Placed on",id:"placed-on",level:3}],m={toc:p},u="wrapper";function s(e){let{components:t,...a}=e;return(0,l.kt)(u,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"place"},"Place"),(0,l.kt)("p",null,"This packet is sent when the player places a shape."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"ID"),": 0x22 (34)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Size"),": 109 bytes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"LZ4 Compressed"),": Yes"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"State"),": Playing"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Bound To"),": Client -> Server")),(0,l.kt)("h2",{id:"structure"},"Structure"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Local Position")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"Local Position Start")," fields depend on the surface the shape is placed on. When local to the world, positions are relative to the world origin. Positions local to the body are in the same space as returned by ",(0,l.kt)("inlineCode",{parentName:"p"},"shape:getLocalPosition()"),"."),(0,l.kt)("table",{parentName:"admonition"},(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"ID"),(0,l.kt)("th",{parentName:"tr",align:null},"Placed On"),(0,l.kt)("th",{parentName:"tr",align:null},"Local positions"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Terrain Surface"),(0,l.kt)("td",{parentName:"tr",align:null},"Local to world")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Terrain Asset"),(0,l.kt)("td",{parentName:"tr",align:null},"Local to world")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Body"),(0,l.kt)("td",{parentName:"tr",align:null},"Local to body")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Lift"),(0,l.kt)("td",{parentName:"tr",align:null},"Local to world")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"Joint"),(0,l.kt)("td",{parentName:"tr",align:null},"Local to body"))))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Offset"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"Hotbar Index"),(0,l.kt)("td",{parentName:"tr",align:null},"be u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The index of the placed item in the hotbar.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},"Total Item Quantity"),(0,l.kt)("td",{parentName:"tr",align:null},"be u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The total amount of items of the same type in the player's inventory. Always ",(0,l.kt)("inlineCode",{parentName:"td"},"1")," when in unlimited inventory mode.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x08"),(0,l.kt)("td",{parentName:"tr",align:null},"Size"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#vec3i"},"Vec3i")),(0,l.kt)("td",{parentName:"tr",align:null},"The size of the blocks placed. Always ",(0,l.kt)("inlineCode",{parentName:"td"},"(0, 0, 0)")," for parts, which the server ignores.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x14"),(0,l.kt)("td",{parentName:"tr",align:null},"Local Position Start"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#vec3i"},"Vec3i")),(0,l.kt)("td",{parentName:"tr",align:null},"The position in block units, local to the world or body, where the shape is placed on. The placed shape will be connected to all sticky faces adjacent to this position.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x20"),(0,l.kt)("td",{parentName:"tr",align:null},"Z Axis"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#vec3i"},"Vec3i")),(0,l.kt)("td",{parentName:"tr",align:null},"The Z-axis of the placed shape.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x2C"),(0,l.kt)("td",{parentName:"tr",align:null},"X Axis"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#vec3i"},"Vec3i")),(0,l.kt)("td",{parentName:"tr",align:null},"The X-axis of the placed shape.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x38"),(0,l.kt)("td",{parentName:"tr",align:null},"Local Position"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#vec3i"},"Vec3i")),(0,l.kt)("td",{parentName:"tr",align:null},"The position of the placed shape in block units, local to the world or body. If local to the body (see note), this value matches the value returned by the ",(0,l.kt)("inlineCode",{parentName:"td"},"shape:getLocalPosition()")," Lua API function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x44"),(0,l.kt)("td",{parentName:"tr",align:null},"Item Uuid"),(0,l.kt)("td",{parentName:"tr",align:null},"le u128"),(0,l.kt)("td",{parentName:"tr",align:null},"The UUID of the item in the inventory that is placed. This does not have to equal to the Shape Uuid. The Vacuum Pipes for example have multiple shapes that can be placed with a single item.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x54"),(0,l.kt)("td",{parentName:"tr",align:null},"Shape Uuid"),(0,l.kt)("td",{parentName:"tr",align:null},"le u128"),(0,l.kt)("td",{parentName:"tr",align:null},"The UUID of the placed shape.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x64"),(0,l.kt)("td",{parentName:"tr",align:null},"Placed On"),(0,l.kt)("td",{parentName:"tr",align:null},"enum ",(0,l.kt)("a",{parentName:"td",href:"#placedon-enum"},"PlacedOn")," : u8"),(0,l.kt)("td",{parentName:"tr",align:null},"The type of surface the shape is placed on.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x65"),(0,l.kt)("td",{parentName:"tr",align:null},"Placed On Data"),(0,l.kt)("td",{parentName:"tr",align:null},"... (8 bytes)"),(0,l.kt)("td",{parentName:"tr",align:null},"The data of the placed on surface.")))),(0,l.kt)("h3",{id:"vec3i"},"Vec3i"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The order of the coordinates is Z, Y, X, which may be seen as counterintuitive.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Offset"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"Z"),(0,l.kt)("td",{parentName:"tr",align:null},"be s32"),(0,l.kt)("td",{parentName:"tr",align:null},"The signed Z coordinate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},"Y"),(0,l.kt)("td",{parentName:"tr",align:null},"be s32"),(0,l.kt)("td",{parentName:"tr",align:null},"The signed Y coordinate.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x08"),(0,l.kt)("td",{parentName:"tr",align:null},"X"),(0,l.kt)("td",{parentName:"tr",align:null},"be s32"),(0,l.kt)("td",{parentName:"tr",align:null},"The signed X coordinate.")))),(0,l.kt)("h3",{id:"placedon-enum"},"PlacedOn Enum"),(0,l.kt)("p",null,"This is an exhaustive list. Packets with values not listed in the table are rejected by the server and ",(0,l.kt)("inlineCode",{parentName:"p"},"Failed to create shape {<uuid>}")," is printed to the console."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"ID"),(0,l.kt)("th",{parentName:"tr",align:null},"Placed On"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#placedon-2---terrain-surface"},"Terrain Surface"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#placedon-3---terrain-asset"},"Terrain Asset"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#placedon-4---body"},"Body"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#placedon-6---lift"},"Lift"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#placedon-8---joint"},"Joint"))))),(0,l.kt)("h4",{id:"placedon-2---terrain-surface"},"PlacedOn 2 - Terrain Surface"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Offset"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"Unknown"),(0,l.kt)("td",{parentName:"tr",align:null},"4 bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Most of the time equal to ",(0,l.kt)("inlineCode",{parentName:"td"},"00 00 02 BB"),", but right after entering the world equal to ",(0,l.kt)("inlineCode",{parentName:"td"},"D2 0A 69 8D"),". The server accepts any value, modifying it does not seem to result in any changes.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},"Unknown"),(0,l.kt)("td",{parentName:"tr",align:null},"4 bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Different every time. The server accepts any value, modifying it does not seem to result in any changes.")))),(0,l.kt)("h4",{id:"placedon-3---terrain-asset"},"PlacedOn 3 - Terrain Asset"),(0,l.kt)("p",null,"Appears to be the same as ",(0,l.kt)("a",{parentName:"p",href:"#placedon-2---terrain-surface"},"Terrain Surface"),"."),(0,l.kt)("h4",{id:"placedon-4---body"},"PlacedOn 4 - Body"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Offset"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"Shape ID"),(0,l.kt)("td",{parentName:"tr",align:null},"be u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the shape the new shape is placed on. Using a non-existing Shape ID is accepted by the server.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},"Body ID"),(0,l.kt)("td",{parentName:"tr",align:null},"be u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the body the new shape is placed on. Using a non-existing Body ID will fail to create the shape.")))),(0,l.kt)("h4",{id:"placedon-6---lift"},"PlacedOn 6 - Lift"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Offset"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"Unknown"),(0,l.kt)("td",{parentName:"tr",align:null},"4 bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Appears to be the same as the first Unknown field of ",(0,l.kt)("a",{parentName:"td",href:"#placedon-2---terrain-surface"},"Terrain Surface"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},"Lift ID"),(0,l.kt)("td",{parentName:"tr",align:null},"be u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the lift the new shape is placed on. Using a non-existing Lift ID results in the shape to become static.")))),(0,l.kt)("h4",{id:"placedon-8---joint"},"PlacedOn 8 - Joint"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Offset"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},"Unknown"),(0,l.kt)("td",{parentName:"tr",align:null},"4 bytes"),(0,l.kt)("td",{parentName:"tr",align:null},"Appears to be the same as the first Unknown field of ",(0,l.kt)("a",{parentName:"td",href:"#placedon-2---terrain-surface"},"Terrain Surface"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x04"),(0,l.kt)("td",{parentName:"tr",align:null},"Joint ID"),(0,l.kt)("td",{parentName:"tr",align:null},"be u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the joint the new shape is placed on. Using a non-existing Joint ID will fail to create the shape.")))),(0,l.kt)("h2",{id:"validation"},"Validation"),(0,l.kt)("h3",{id:"hotbar-index"},"Hotbar index"),(0,l.kt)("h4",{id:"limited-inventory-mode"},"Limited inventory mode"),(0,l.kt)("p",null,"If the uuid of the item in the slot indicated by the ",(0,l.kt)("inlineCode",{parentName:"p"},"Hotbar Index")," field does not equal to the value of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Item Uuid")," field, the packet is ignored."),(0,l.kt)("h4",{id:"unlimited-inventory-mode"},"Unlimited inventory mode"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Hotbar Index")," field is ignored. Any value is accepted, including non-existent slots."),(0,l.kt)("h3",{id:"total-item-quantity"},"Total item quantity"),(0,l.kt)("p",null,"Any value for the ",(0,l.kt)("inlineCode",{parentName:"p"},"Total Item Quantity")," field is accepted by the server."),(0,l.kt)("h3",{id:"position"},"Position"),(0,l.kt)("p",null,"The game performs a collision check where the shape will appear in the world. If the space is occupied, the packet is ignored. It is not validated if the shape is physically connected to anything."),(0,l.kt)("h3",{id:"size"},"Size"),(0,l.kt)("p",null,"There are no size validations. Any size is accepted, including negative bounds, on the condition the space is not already occupied."),(0,l.kt)("h4",{id:"limited-inventory-mode-1"},"Limited inventory mode"),(0,l.kt)("p",null,"The player must have enough blocks in their inventory to place the shape. If the volume is negative, the player is rewarded with blocks. If the quantity of the item stack becomes larger than the maximum allowed stack size, the item stack disappears."),(0,l.kt)("h3",{id:"rotation"},"Rotation"),(0,l.kt)("p",null,"The server accepts any values for the ",(0,l.kt)("inlineCode",{parentName:"p"},"Z Axis")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"X Axis")," fields, including impossible configurations. Rotations where both axes are in parallel or where an axis is not of length 1 are allowed. If the angle between the X and Z axes is not 90 degrees, undefined bahaviour will occur. Physical sizes and collisions will diverge from the placed size. It may make removing the shape impossible. Models look either completely normal, or are completely invisible. They will never be warped."),(0,l.kt)("h3",{id:"uuids"},"Uuids"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Shape Uuid")," is always validated to belong to a loaded shape. If this no shape exists with the provided ",(0,l.kt)("inlineCode",{parentName:"p"},"Shape Uuid"),", the packet is ignored and the server responds with ",(0,l.kt)("a",{parentName:"p",href:"/docs/networking/packets/display-alert-text"},"19 - Display Alert Text"),' "Your host does not support that shape".'),(0,l.kt)("h4",{id:"limited-inventory-mode-2"},"Limited inventory mode"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Item Uuid")," field must be valid for the given ",(0,l.kt)("inlineCode",{parentName:"p"},"Shape Uuid"),". It is valid if the ",(0,l.kt)("inlineCode",{parentName:"p"},"Item Uuid")," equals to the ",(0,l.kt)("inlineCode",{parentName:"p"},"Shape Uuid")," or the ",(0,l.kt)("inlineCode",{parentName:"p"},"baseUuid")," property in the shapeset JSON file. If it is invalid, the server ignores the packet."),(0,l.kt)("h4",{id:"unlimited-inventory-mode-1"},"Unlimited inventory mode"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"Item Uuid")," field is ignored, the ",(0,l.kt)("inlineCode",{parentName:"p"},"Shape Uuid")," is always used. Invalid uuids for the ",(0,l.kt)("inlineCode",{parentName:"p"},"Item Uuid")," field are allowed."),(0,l.kt)("h3",{id:"placed-on"},"Placed on"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"#placedon-enum"},"PlacedOn Enum"),"."))}s.isMDXComponent=!0}}]);